# -*- coding: utf-8 -*-
"""ADS EXP 1-descriptive statistics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qAVpGzj3k-F2Sq7Csz2uzfia9esNIwrt
"""

import pandas as pd
import seaborn as sb
import numpy as np

from scipy import stats

import matplotlib.pyplot as plt

df = pd.read_csv("/content/exp1_bmi.csv")

df.info()

df.describe()

df.isnull()

df

df.mode()

print("Mean of Age: ", df["Age"].mean())
print("Median of Age: ", df["Age"].median())
print("Mode of Age: ", df["Age"].mode())

print("Mean of Weight: ", df["Weight"].mean())
print("Median of Weight: ", df["Weight"].median())
print("Mode of Weight: ", df["Weight"].mode())

print("Mean of Height: ", df["Height"].mean())
print("Median of Height: ", df["Height"].median())
print("Mode of Height: ", df["Height"].mode())

print("Mean of Bmi: ", df["bmi"].mean())
print("Median of Bmi: ", df["bmi"].median())
print("Mode of Bmi: ", df["bmi"].mode())

print("Describe of Age: ", df["Age"].describe())
print("Standard Deviation of Age: ", df["Age"].std())
print("Variance of Age: ", df["Age"].var())
print("Minimum of Age: ", df["Age"].min())
print("Maximum of Age: ", df["Age"].max())

print("Describe of Weight: ", df["Weight"].describe())
print("Standard Deviation of Weight: ", df["Weight"].std())
print("Variance of Weight: ", df["Weight"].var())
print("Minimum of Weight: ", df["Weight"].min())
print("Maximum of Weight: ", df["Weight"].max())

print("Describe of Height: ", df["Height"].describe())
print("Standard Deviation of Height: ", df["Height"].std())
print("Variance of Height: ", df["Height"].var())
print("Minimum of Height: ", df["Height"].min())
print("Maximum of Height: ", df["Height"].max())

"""Q1 = df.quantile(0.25)
Q3 = df.quantile(0.75)
"""

print("AGE")
q1 = df["Age"].quantile(0.25)
q3 = df["Age"].quantile(0.75)
print("Q1: ", q1)
print("Q3: ", q3)
IQR = q3-q1
print("IQR: ", IQR)

print("WEIGHT")
q1 = df["Weight"].quantile(0.25)
q3 = df["Weight"].quantile(0.75)
print("Q1: ", q1)
print("Q3: ", q3)
IQR = q3-q1
print("IQR: ", IQR)

print("HEIGHT")
q1 = df["Height"].quantile(0.25)
q3 = df["Height"].quantile(0.75)
print("Q1: ", q1)
print("Q3: ", q3)
IQR = q3-q1
print("IQR: ", IQR)

sb.boxplot(x="Age", data = df)
plt.show()

sb.boxplot( x="Gender", y="Age",data = df)
plt.show()

sd = df['Age'].std()
Kurtosis = df['Age'].kurtosis()
Skew = df['Age'].skew()
mean = df['Age'].mean()
DQ = sd/mean
Harmonic_mean = stats.hmean(df['Age'])
Risk = Harmonic_mean/mean
z_score = stats.zscore(df['Age'])

print("Standard Deviation: ", sd)
print("Kurtosis: ", Kurtosis)
print("Skewness: ", Skew)
print("Mean: ", mean)
print("DQ: ", DQ)
print("Harmonic mean: ", Harmonic_mean)
print("Risk: ", Risk)
print("Z-Score: ", z_score)

